// @flow

export type Errors = {
  __formError?: mixed,
  [string]: mixed,
};

export type Values = mixed;

export type FormState = {
  activeField: string | void,
  allTouched: boolean,
  anyTouched: boolean,
  fieldErrors: {
    [string]: mixed,
  },
  fieldStates: {
    [string]: {
      active?: boolean,
      touched?: boolean,
      visited?: boolean,
    },
  },
  formError: mixed,
  submitting: boolean,
  values: Values,
};

export type FormStateAndHelpers = FormState & {
  dirty: boolean,
  pristine: boolean,
  fieldActive: (fieldName: string) => boolean,
  fieldDirty: (fieldName: string) => boolean,
  fieldPristine: (fieldName: string) => boolean,
  fieldTouched: (fieldName: string) => boolean,
  fieldVisited: (fieldName: string) => boolean,
  getFieldError: (fieldName: string) => mixed,
  getFieldValue: (fieldName: string) => mixed,
};

export type FieldValidator = (
  value: mixed,
  stateAndHelpers: FormStateAndHelpers,
) => mixed;

export type FormValidator = (stateAndHelpers: FormStateAndHelpers) => Errors;

export type FormActionSenders = {
  blur: (fieldName: string) => void,
  changeValue: (fieldName: string, value: mixed) => void,
  focus: (fieldName: string) => void,
  setFieldValidators: (
    fieldName: string,
    validators: FieldValidator | FieldValidator[],
  ) => void,
  submit: (doSubmit: () => any) => Promise<void>,
  touchAll: () => void,
};

export type FormStateAndHelpersAndActions = FormStateAndHelpers & {
  actions: FormActionSenders,
};

export type ActionTypes =
  | 'BLUR'
  | 'CHANGE_VALUE'
  | 'FOCUS'
  | 'SET_FIELD_VALIDATORS'
  | 'SET_SUBMIT_SUCCEEDED'
  | 'SET_SUBMIT_FAILED'
  | 'START_SUBMIT'
  | 'TOUCH_ALL'
  | 'VALIDATE';

export type FieldState = {
  active: boolean,
  dirty: boolean,
  error: mixed,
  pristine: boolean,
  touched: boolean,
  value: mixed,
  visited: boolean,
};
